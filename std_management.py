# -*- coding: utf-8 -*-
"""std management.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fDbDYkNpoDBJfHDGE3Nix_M86J6W4NS1
"""

"""
Fields :- ['roll', 'name', 'age', 'email', 'phone']
Mark Fields :- ['roll','name','eng_mark','mat_mark','phy_mark','che_mark','pspp_mark']
1. Add New Student
2. Add Student Mark details
3. View Students detail
4. View Students Mark detail
5. Search Student
6. Update Student
7. Delete Student
8. Quit
"""
 
import csv
#Global variables
student_fields = ['roll', 'name', 'age', 'phone', 'email']
student_fields_mark = ['roll','name','English mark','Maths mark','Physics mark','Chemistry mark','Pspp mark']
student_database = 'students.csv'
student_mark = 'mark.csv' 
 
def display_menu():
    print("--------------------------------------")
    print(" Welcome to Student Management System")
    print("---------------------------------------")
    print("1. Add New Student")
    print("2. Add Student Mark details")
    print("3. View Students")
    print("4. View Students Mark details")
    print("5. Search Student")
    print("6. Update Student")
    print("7. Delete Student")
    print("8. Quit")
 
 
def add_student():
    print("-------------------------")
    print("Add Student Information")
    print("-------------------------")
    global student_fields
    global student_database
 
    student_data = []
    for field in student_fields:
        value = input("Enter " + field + ": ")
        student_data.append(value)
 
    with open(student_database, "a", encoding="utf-8") as f:
        writer = csv.writer(f)
        writer.writerows([student_data])
 
    print("Data saved successfully")
    input("Press any key to continue")
    return

def add_student_mark():
    print("-------------------------")
    print("Add Student Mark Information")
    print("-------------------------")
    global student_fields_mark
    global student_mark
 
    student_data = []
    for field in student_fields_mark:
        value = input("Enter " + field + ": ")
        student_data.append(value)
 
    with open(student_mark, "a", encoding="utf-8") as f:
        writer = csv.writer(f)
        writer.writerows([student_data])
 
    print("Data saved successfully")
    input("Press any key to continue")
    return
 
 
def view_students():
    global student_fields
    global student_database
 
    print("--- Student Records ---")
 
    with open(student_database, "r", encoding="utf-8") as f:
        reader = csv.reader(f)
        for x in student_fields:
            print(x, end='\t |')
        print("\n-----------------------------------------------------------------")
 
        for row in reader:
            for item in row:
                print(item, end="    |")
            print("\n")
 
    input("Press any key to continue")
 
def view_students_mark():
    global student_fields_mark
    global student_mark
 
    print("--- Student Mark Records ---")
 
    with open(student_mark, "r", encoding="utf-8") as f:
        reader = csv.reader(f)
        for x in student_fields_mark:
            print(x, end='\t |')
        print("\n-----------------------------------------------------------------")
 
        for row in reader:
            for item in row:
                print(item, end="    |")
            print("\n")
 
    input("Press any key to continue")

def search_student():
    global student_fields
    global student_database
 
    print("--- Search Student ---")
      roll = input("Enter roll no. to search: ")
    with open(student_database, "r", encoding="utf-8") as f:
        reader = csv.reader(f)
        for row in reader:
            if len(row) > 0:
                if roll == row[0]:
                    print("----- Student Found -----")
                    print("Roll: ", row[0])
                    print("Name: ", row[1])
                    print("Age: ", row[2])
                    print("Email: ", row[3])
                    print("Phone: ", row[4])
                    break
        else:
            print("Roll No. not found in our database")
    input("Press any key to continue")
 
 
def update_student():
    global student_fields
    global student_database
 
    print("--- Update Student ---")
    roll = input("Enter roll no. to update: ")
    index_student = None
    updated_data = []
    with open(student_database, "r", encoding="utf-8") as f:
        reader = csv.reader(f)
        counter = 0
        for row in reader:
            if len(row) > 0:
                if roll == row[0]:
                    index_student = counter
                    print("Student Found: at index ",index_student)
                    student_data = []
                    for field in student_fields:
                        value = input("Enter " + field + ": ")
                        student_data.append(value)
                    updated_data.append(student_data)
                else:
                    updated_data.append(row)
                counter += 1
 
 
    # Check if the record is found or not
    if index_student is not None:
        with open(student_database, "w", encoding="utf-8") as f:
            writer = csv.writer(f)
            writer.writerows(updated_data)
    else:
        print("Roll No. not found in our database")
 
    input("Press any key to continue")
 
 
def delete_student():
    global student_fields
    global student_database
 
    print("--- Delete Student ---")
    roll = input("Enter roll no. to delete: ")
    student_found = False
    updated_data = []
    with open(student_database, "r", encoding="utf-8") as f:
        reader = csv.reader(f)
        counter = 0
        for row in reader:
            if len(row) > 0:
                if roll != row[0]:
                    updated_data.append(row)
                    counter += 1
                else:
                    student_found = True
 
    if student_found is True:
        with open(student_database, "w", encoding="utf-8") as f:
            writer = csv.writer(f)
            writer.writerows(updated_data)
        print("Roll no. ", roll, "deleted successfully")
    else:
        print("Roll No. not found in our database")
 
    input("Press any key to continue")
 
while True:
    display_menu()
 
    choice = input("Enter your choice: ")
    if choice == '1':
        add_student()
    elif choice =='2':
        add_student_mark()
    elif choice == '3':
        view_students()
    elif choice == '4':
        view_students_mark()
    elif choice == '5':
        search_student()
    elif choice == '6':
        update_student()
    elif choice == '7':
        delete_student()
    else:
        break
 
print("-------------------------------")
print(" Thank you for using our system")
print("-------------------------------")
